Bool
----
The bool type is a type which represents logical values.
----

import Category.Function
import Category.Boolean

--## Definition

-- The ''Bool'' datatype represents truth values of logic.
data Bool	= False	-- Always keep false first as it is a special builtin value in the interpreter!
		| True

instance Bool is Boolean

--## Logical operations

precedence of (&&) is left, (&&) = (||)
precedence of (||) is left, (||) = (&&)
precedence of (!) is prefix, (!) < (&&)

-- Logical 'and'-function. Returns True if, and only if both arguments are True
  ~ annihilator for and	: b => False && b	= False
  ~ neutral element for and: b => True && b	= b
  > True && True		= True
  > False && True && False	= False
  > True && True	= True
  > True && False	= False
(&&)		: Bool -> Bool -> Bool & Associative Bool
  True True	= True
  _ _		= False

-- Logical 'or'-function. Returns False if, and only if both arguments are False
  ~ annihilator for or	: b => True || b	= True
  ~ neutral element for or: b => False  || b	= b
  > False || False		= False
  > False || True || False	= True
(||)		: Bool -> Bool -> Bool & Associative Bool
  False False	= False
  _ _		= True

-- Logical 'not' function (aka invert).
---  ~ double not	: b => ! !b = b
  > !True	= False
  > !False	= True
  > !False && True	= True ---
(!)	: Bool -> Bool
  True	= False
  False	= True

-- Some extremely private function
_priv	: Bool -> Bool
t	= t
