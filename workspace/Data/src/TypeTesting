TypeTesting
-----------
Some type-testing
-----------

cat C0
	> True

cat C1
	> True

cat A0 (a:C0)
	> True

cat A1 a: A0 a
	> True

cat A2 (a:C1): A1 a
	> True

cat A3 a:A2 a
	> True

cat A4 a:A3 a
	> True

---
cat Monoid
	(+) : monoid -> monoid -> monoid

type List a	= {Empty} + List' a
type List' a	= {Elem head:a; elem:List a}

cat Set (a:Eq)
	> True

cat Set0 a: Set a
	> True

instance List a is Monoid

cat Eq
	(==) : eq -> eq -> eq

instance List (a:Eq) is Eq

instance List is Set

instance List (a:(k,v)) is Dict k v

cat Dict (a:Eq) b
	> True
---
