Types

author		"Pieter Vander Vennet"
date		[2014, 06, 7, 18, 24, 42]
desc		"The syntaxis of types in Languate. 
		Valid types are: 
		Int
		Nat
		Int -> Nat
		{Set}
		{Dict --> To}
		[List]
		()		-- void
		(a -> b) -> c
		"

public import Prelude

_$knownType	::= globalIdent
_$freeType	::= localIdent
_$void		::= "\(\)"
_simpleType	::= knownType | freeType | void | "\(" type "\)"


_commaSepTypes	::= type ( "," type)*
_list		::= "\[" commaSepTypes "\]"
_set		::= "\{" commaSepTypes "\}"
_dict		::= "\{" commaSepTypes "-->" commaSepTypes "\}"

_tuple		::= "\(" type ("," type)+ "\)"

_baseType	::= dict | set | list | tuple | simpleType

_curry		::= baseType ("->" baseType)+

type		::= curry | baseType
