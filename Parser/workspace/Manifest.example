package		: ExampleManifest

-- see documentation for all options (well, this file is the documentation...)

version		: 0.0.1

author		: Pieter Vander Vennet
maintainer	: Pieter Vander Vennet
language	: Languate 0.i		-- contains package manager version

synopsis 	: Package containing examples to build the interpreter
description 	: "This is a package which contains example files to build the entire system, and acts as a real life test."
license	: none		-- some standard licenses don't need a file
license-file	: license.txt

-- does not use any other package except for the standard libs
build-depends	: base 1.2, filepath 3.1

-- some function. If this function is IO, it is executed
-- the returned value is printed/piped
-- if it's a normal function, it tries to parse arguements	
execute		: Module.Submodule
-- the name it is invoked on the command line
execute-as	: test

-- these functions are exposed as library
exposes		: Module, Module.Submodule

-- returns a data structure representing a 'service', e.g. a printer service, bitcoin node, ...
-- service == a class which can start, stop and query a state
-- type will be checked by compiler
service		: Module.someFunction

-- a class with functions that a plugin needs
plugin-type	: Plugin

-- a function with type 'Plugin -> IO ()' that will be called automatically
plugin-register	: registerPlugin

-- if this package is a plugin for some other package, state this here
-- plugin-for	: Package
-- what function generates the plugin. Is a constant
-- plugin-function	: getPlugin
